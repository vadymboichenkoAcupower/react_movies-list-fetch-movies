{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","setMovie","useEffect","_Fragment","onSubmit","event","query","preventDefault","fetch","concat","then","res","json","catch","Response","Error","response","foundMovie","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","value","placeholder","onChange","target","cn","disabled","length","onClick","some","oldMovie","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"uTAQaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,eAAA,OAAKC,UAAU,OAAO,UAAQ,YAAWC,SAAA,CACvCC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,gBAAeC,SAC/BC,cAAA,OACE,UAAQ,cACRC,IAAKL,EAAMM,OACXC,IAAI,kBAIVN,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAC3BF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAAA,UAAQF,UAAU,iBAAgBC,SAChCC,cAAA,OACEC,IAAI,wBACJE,IAAI,aAIVH,cAAA,OAAKF,UAAU,gBAAeC,SAC5BC,cAAA,KAAGF,UAAU,aAAa,UAAQ,aAAYC,SAAEH,EAAMQ,aAI1DP,eAAA,OAAKC,UAAU,UAAU,UAAQ,mBAAkBC,SAAA,CAChDH,EAAMS,YACPL,cAAA,SACAA,cAAA,KAAGM,KAAMV,EAAMW,QAAS,UAAQ,WAAUR,SAAC,iBAK3C,EChCKS,EAA8B,SAAHb,GAAA,IAAMc,EAAMd,EAANc,OAAM,OAClDT,cAAA,OAAKF,UAAU,SAAQC,SACpBU,EAAOC,KAAI,SAAAd,GAAK,OACfI,cAACN,EAAS,CAERE,MAAOA,GADFA,EAAMe,OAEX,KAEA,E,6BCND,IAAMC,EAA6B,SAAHjB,GAA+B,IAAzBc,EAAMd,EAANc,OAAQI,EAASlB,EAATkB,UACnDC,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BV,EAAKY,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA0BJ,mBAAwB,IAAGK,EAAAH,YAAAE,EAAA,GAA9CE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAkCR,oBAAS,GAAMS,EAAAP,YAAAM,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA0BZ,mBAAuB,MAAKa,EAAAX,YAAAU,EAAA,GAA/C/B,EAAKgC,EAAA,GAAEC,EAAQD,EAAA,GAmDtB,OAJAE,qBAAU,WACRR,EAAS,GACX,GAAG,CAAClB,IAGFP,eAAAkC,WAAA,CAAAhC,SAAA,CACEF,eAAA,QACEC,UAAU,aACVkC,SAtCe,SAACC,GC5BjB,IAAkBC,ED6BrBD,EAAME,iBAENT,GAAa,IC/BQQ,EDiCZ9B,EChCJgC,MAAM,GAADC,OAHE,2CAGS,OAAAA,OAAMH,IAC1BI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,mBACR,KD4BEL,MAAK,SAAAM,GACJ,GAAI,aAAcA,GAAkC,UAAtBA,EAASF,SACrCpB,EAAS,6CACJ,GAAI,UAAWsB,EAAU,CAC9BtB,EAAS,MAET,IAAMuB,EAAoB,CACxBzC,MAAOwC,EAASE,MAChBzC,YAAauC,EAASG,KACtB7C,OAAS0C,EAASI,QAA8B,QAApBJ,EAASI,OACjCJ,EAASI,OACT,4DACJzC,QAAQ,8BAAD8B,OAAgCO,EAASK,QAChDtC,OAAQiC,EAASK,QAGnBpB,EAASgB,EACX,CACF,IACCK,SAAQ,WACPxB,GAAa,EACf,GACJ,EAU6B3B,SAAA,CAEvBF,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,SAAOF,UAAU,QAAQqD,QAAQ,cAAapD,SAAC,gBAI/CC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,SACE,UAAQ,aACRoD,KAAK,OACLC,GAAG,cACHC,MAAOlD,EACPmD,YAAY,0BACZzD,UAAU,QACV0D,SApEc,SAACvB,GACzBf,EAASe,EAAMwB,OAAOH,MACxB,OAsEW7B,GAAaJ,GACdrB,cAAA,KAAGF,UAAU,iBAAiB,UAAQ,eAAcC,SACjDsB,OAKPxB,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAC/BC,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,eACRoD,KAAK,SACLtD,UAAW4D,IAAG,kBAAmB,CAC/B,aAAcjC,IAEhBkC,SAAUvD,EAAMwD,OAAS,EAAE7D,SAExBH,EAGDI,cAAA,KAAAD,SAAG,iBAFHC,cAAA,KAAAD,SAAG,qBAORH,GACCI,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAAA,UACE,UAAQ,YACRoD,KAAK,SACLtD,UAAU,oBACV+D,QAnGS,YACJpD,EAAOqD,MAAK,SAAAC,GAAQ,OAAIA,EAAS3D,SAAe,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOQ,MAAO,KAEzDR,GACfiB,EAAU,GAADwB,OAAA2B,YAAKvD,GAAM,CAAEb,KAGxBiC,EAAS,MACTX,EAAS,GACX,EA0FsCnB,SACzB,4BAQPH,IAAU6B,GACV5B,eAAA,OAAKC,UAAU,YAAY,UAAQ,mBAAkBC,SAAA,CACnDC,cAAA,MAAIF,UAAU,QAAOC,SAAC,YACtBC,cAACN,EAAS,CAACE,MAAOA,SAK5B,EEpIaqE,EAAM,WACjB,IAAAnD,EAA4BC,mBAAkB,IAAGC,EAAAC,YAAAH,EAAA,GAA1CL,EAAMO,EAAA,GAAEH,EAASG,EAAA,GAExB,OACEnB,eAAA,OAAKC,UAAU,OAAMC,SAAA,CACnBC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAACQ,EAAU,CAACC,OAAQA,MAGtBT,cAAA,OAAKF,UAAU,UAASC,SACtBC,cAACY,EAAS,CAACH,OAAQA,EAAQI,UAAWA,QAI9C,EChBAqD,IAASC,OAAOnE,cAACiE,EAAG,IAAKG,SAASC,eAAe,Q","file":"static/js/main.43596e5c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\nimport { Movie } from '../../types/Movie';\r\n\r\ntype Props = {\r\n  movies: Movie[];\r\n};\r\n\r\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard\r\n        key={movie.imdbId}\r\n        movie={movie}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n","import { useState, useEffect } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState<string | null>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleAddMovie = () => {\n    const hasMovie = movies.some(oldMovie => oldMovie.title === movie?.title);\n\n    if (!hasMovie && movie) {\n      setMovies([...movies, movie]);\n    }\n\n    setMovie(null);\n    setTitle('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    getMovie(title)\n      .then(response => {\n        if ('Response' in response && response.Response === 'False') {\n          setError('Can\\'t find a movie with such a title');\n        } else if ('Title' in response) {\n          setError(null);\n\n          const foundMovie: Movie = {\n            title: response.Title,\n            description: response.Plot,\n            imgUrl: (response.Poster && response.Poster !== 'N/A')\n              ? response.Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n            imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n            imdbId: response.imdbID,\n          };\n\n          setMovie(foundMovie);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    setError('');\n  }, [title]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              onChange={handleTitleChange}\n            />\n          </div>\n\n          {(!isLoading && error) && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={title.length < 1}\n            >\n              {(!movie) ? (\n                <p>Find a movie</p>\n              ) : (\n                <p>Search again</p>\n              )}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {(movie && !isLoading) && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d78fce90';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}